{"version":3,"sources":["components/Header.jsx","components/Table.jsx","utils/API.js","components/Container.jsx","App.js","index.js"],"names":["Header","props","className","onSubmit","handleFormSubmit","type","placeholder","aria-label","onChange","handleInputChange","Table","scope","date-field","data-sortable","onClick","sortBy","state","filteredResults","map","result","firstName","name","first","lastName","last","nameString","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","apiCall","axios","get","Container","search","results","sortDirection","initialSort","e","searchString","target","value","setState","filterResults","toLowerCase","trim","preventDefault","key","primary","secondary","sortedResults","reverse","initialSortDirection","sort","a","b","localeCompare","data","console","log","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","then","res","catch","err","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fa1af94.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n  return (\n\n    <nav className=\"navbar navbar-light bg-light\">\n      <div className=\"navbar-brand\">Employee Directory</div>\n      <form\n        className=\"form-inline\"\n        onSubmit={props.handleFormSubmit}>\n        \n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          onChange={props.handleInputChange} />\n        \n      </form>\n    </nav>\n\n  );\n};\n\nexport default Header;","import React from 'react';\nimport './style.css';\n\nconst Table = (props) => {\n    return (\n        <table className=\"table table-sortable text-center\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">\n                        <span>Image</span>\n                    </th>\n\n                    <th scope=\"col\"\n                        date-field=\"name\"\n                        data-sortable=\"true\">\n                        <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>Name</span>\n                    </th>\n\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"email\")}>Phone Number</span>\n                    </th>\n\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"email\")}>Email</span>\n                    </th>\n\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"dob\", \"date\")}>Date of Birth</span>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.state.filteredResults.map((result) => {\n                    // console.log(result.name);\n                    const firstName = result.name.first;\n                    const lastName = result.name.last;\n                    const nameString = `${firstName} ${lastName}`\n                    const dob = props.formatDate(result.dob.date);\n                    return (\n                        <tr key={result.login.uuid}>\n                             <td>\n                                <img src={result.picture.thumbnail} alt={nameString} />\n                            </td>\n\n                            <td className=\"align-middle\">\n                                {nameString}\n                            </td>\n                           \n                            <td className=\"align-middle\">\n                                <a href={`tel:+1${result.phone}`}>{result.phone}</a>\n                            </td>\n\n                            <td className=\"align-middle email\">\n                                <a href={`mailto:${result.email}`}>{result.email}</a>\n                            </td>\n\n                            <td className=\"align-middle\">{dob}\n                            </td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n\n\n\n        </table>\n    )\n}\n\nexport default Table;","import axios from 'axios';\n\nconst apiURL = 'https://randomuser.me/api/?results=40&nat=us';\n\nconst apiCall = () => {\n    return axios.get(apiURL);\n}\n\nexport default apiCall;\n\n\n","import React, { Component } from 'react';\nimport Header from \"./Header\"\nimport Table from \"./Table\"\nimport apiCall from \"../utils/API\"\n\nclass Container extends Component {\n    state = {\n        search: \"\",\n        results: [],\n        filteredResults: [],\n        sortDirection: this.initialSort,\n    };\n\n    get initialSort() {\n        return {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            dob: \"\",\n        };\n    }\n\n    componentDidMount() {\n        apiCall()\n          .then((res) =>\n            this.setState({\n                results: res.data.results,\n              filteredResults: res.data.results,\n            })\n          )\n          .catch((err) => console.log(err));\n      }\n    \n    handleInputChange = (e) => {\n        const searchString = e.target.value;\n        this.setState({ search: searchString });\n        this.filterResults(searchString.toLowerCase().trim());\n        // console.log(searchString)\n        // console.log(this.state.search)\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        // console.log(\"formsubmit\")\n    }\n\n    sortBy = (key, primary = 0, secondary = 0) => {\n        let sortedResults = this.state.filteredResults;\n        if (this.state.sortDirection[key]) {\n          this.setState({\n            filteredResults: sortedResults.reverse(),\n            sortDirection: {\n              ...this.initialSortDirection,\n              [key]: this.state.sortDirection[key] === \"asc\" ? \"desc\" : \"asc\",\n            },\n          });\n        } else {\n          sortedResults = this.state.filteredResults.sort((a, b) => {\n            a = a[key];\n            b = b[key];\n    \n            if (primary) {\n              if (secondary && a[primary] === b[primary]) {\n                return a[secondary].localeCompare(b[secondary]);\n              }\n              return a[primary].localeCompare(b[primary]);\n            } else {\n              return a.localeCompare(b);\n            }\n          });\n    \n          this.setState({\n            filteredResults: sortedResults,\n            sortDirection: {\n              ...this.initialSort,\n              [key]: \"asc\",\n            },\n          });\n        }\n      };\n    \n\n      filterResults = (data) => {\n        if (data) {\n            console.log(data);\n          this.setState({\n            filteredResults: this.state.results.filter((result) => {\n              return (\n                result.name.first\n                  .toLowerCase().concat(\" \", result.name.last.toLowerCase()).includes(data) ||\n                result.phone.includes(data) ||\n                result.phone.replace(/[^\\w\\s]/gi, \"\").includes(data) ||\n                result.email.includes(data) ||\n                this.formatDate(result.dob.date).includes(data)\n              );\n            }),\n          });\n        } else {\n          this.setState({ filteredResults: this.state.results });\n        }\n      };\n\n// creating dob string\n\n    formatDate = (date) => {\n        date = new Date(date);\n        let dob = [];\n        dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n        dob.push((\"0\" + date.getDate()).slice(-2));\n        dob.push(date.getFullYear());\n    \n        return dob.join(\"/\");\n      };\n\n    render() {\n        return (\n\n            <div className=\"container-fluid\">\n                <Header \n                value={this.state.search}\n                handleFormSubmit={this.handleFormSubmit}\n                handleInputChange={this.handleInputChange}\n                    />\n                <Table \n                state={this.state}\n                sortBy={this.sortBy}\n                filterResults={this.filterResults}\n                formatDate={this.formatDate}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Container;","import React from 'react';\nimport Container from \"./components/Container\"\n\n\n\n\nfunction App() {\n  return (\n\n    <Container />\n\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}